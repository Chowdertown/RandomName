package NameGen;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Scanner;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
/**
 * The purpose is to generate random names by parsing data 
 * from NationalNames.csv
 * @author Oladotun Oladimejij
 *
 */
public class NameGenerator {
	private static HashMap<Integer,String> rndNames = new HashMap<>();
	private static String name;
	public NameGenerator () {
		name = "";
	}
	
	/**
	 * This method parses data from a list of names from a CSV called
	 * NationalNames.csv that contains the most popular names in the United
	 * States from 1880 to the present.
	 * 
	 * In a try Catch
	 * It tries
	 * It uses a Scanner to read the CSV file, and splits the data into its
	 * columns id , Names, Years, Gender, and Count. The data needed is the 
	 * ones from  id and Names
	 * 
	 * It creates a HashMap to map the values of the id/Index number(key)
	 * to their names(value)
	 * 
	 * 
	 * and it catches an IOexception.
	 * 
	 * @return HashMap of index values mapped to a name value.
	 */
	public static void ListNames() {

		String nameFileData = "src/NationalNames.csv";
		File nameFile = new File(nameFileData);

		try {
			Scanner inputStream = new Scanner(nameFile);
			inputStream.next(); // ignore first line in CSV
			while (inputStream.hasNext()) {

				String data = inputStream.next();
				String[] values = data.split(",");

				// values[0]->id, values[1]->names, values->[3] gender
				Integer index = Integer.parseInt(values[0]);
				rndNames.put(index, values[1]);

			}
			inputStream.close();
		} catch (IOException exc) {
			System.out.println("FILE DOES NOT EXIST :(");
		}

	}
	/**
	 * This access the static name field
	 * @return name generated by NameGenerator
	 */
	public static String getName() {
		if(name != null)
		  return name;
		else
			return "FAIL";
	}
	/**
	 * This method utilizes the Math class Random() method to generate random
	 * to get randomly pick a name from the rndNames arraylist by randomly
	 * accessing a name by the index key.
	 * @return aRandomName
	 */
	public static String getRandomName() {
		try {

			int size = rndNames.size();
			int pick = ((int) (Math.random() * (size)) - 1); // index from 0-(size-1)

			String n = rndNames.get(pick);
			name = n;
			return name;
		} catch (Exception exc) {
			name = "DID NOT WORK SORRY :("; 
			return "";
		}
	}
	
    /**
     * This method takes a integer result,and JFrame frame as a parameter
     * this takes the result of a JOptionPane.showConfirm and runs it through
     * It displays the contents to the frame parameter.
     *  
     * switch statements, if the result is equivalent to the 
     * JOptionPane.YES_OPTION it will generate and random name and ask the user
     * if they want to generate another name. If result is equivalent to 
     * JOptionPane.NO_OPTION it will print "No" then break.
     * If result is equivalent to  JOptionPane.CANCEL_OPTION it will print 
     * "Cancel" then break.
     * If result is equivalent to  JOptionPane.CLOSED_OPTION it will print 
     * "Closed" then break.
     * @param result
     * @param frame
     * 
     */
	public static void showPrompt(int result, JFrame frame) {
		switch (result) {
		case JOptionPane.YES_OPTION:
			getRandomName();
			result = JOptionPane.showConfirmDialog(null, "Would you like to get another random Name?");
			showPrompt(result, frame);
			
		case JOptionPane.NO_OPTION:
			System.out.println("No");
			break;
		case JOptionPane.CANCEL_OPTION:
			System.out.println("Canceled");
		case JOptionPane.CLOSED_OPTION:
			System.out.println("Closed");
			break;
		}
	}
	
	
}
